{"version":3,"sources":["Components/AddCategory.js","Components/GifGridIitem.js","helpers/getGifs.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","category","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","arrayImg","id","images","downsized","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","img","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAAiB,EAENC,mBAAS,IAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAkB1C,OAEI,0BAAMC,SAbU,SAACC,GAChBA,EAAEC,iBACFC,QAAQC,IAAIN,EAAWO,QACpBP,EAAWO,OAAOC,OAAO,IACzBV,GAAc,SAAAW,GAAa,MAAM,CAAET,GAAR,mBAAsBS,OACjDR,EAAc,OASlB,2BACAS,KAAK,OACLC,MAAOX,EACPY,SArBoB,SAACT,GACrBF,EAAcE,EAAEU,OAAOF,YCOhBG,EAXM,SAAC,GAAe,IAAdC,EAAa,EAAbA,MAAMC,EAAO,EAAPA,IAEzB,OACI,yBAAKC,UAAU,wBACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCPCK,EAAO,uCAAG,WAAOX,GAAP,uBAAAY,EAAA,6DACbL,EADa,0DAC0CM,UAAWb,GADrD,sDAEAc,MAAMP,GAFN,cAEbQ,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEAC,EAAOD,EAAKE,KACd,SAAAC,GAAY,IAAD,EACT,MAAO,CACNC,GAAGD,EAASC,GACZf,MAAMc,EAASd,MACfC,IAAG,UAACa,EAASE,cAAV,aAAC,EAAiBC,UAAUhB,QAVpB,kBAehBW,GAfgB,4CAAH,sDCIXM,EAAU,SAAC,GAAgB,IAAfxB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAY,IAAD,EAETV,mBAAS,CAC/B2B,KAAK,GACLQ,SAAQ,IAJuB,mBAE5BC,EAF4B,KAErBC,EAFqB,KAenC,OARAC,qBAAU,WAELjB,EAAQX,GAAU6B,MACf,SAAAX,GAAQS,EAAS,CAACV,KAAKC,EAAKO,SAAQ,SAE3C,CAACzB,IAGK0B,EDXqBI,CAAa9B,GAA9BsB,EAFwB,EAE7BL,KAAaQ,EAFgB,EAEhBA,QAEtB,OACK,oCACA,wBAAIjB,UAAU,kBAAkBR,GAChC,2BAAIyB,GAAW,YACf,yBAAKjB,UAAU,aAEX,4BAEIc,EAAOH,KACL,SAACY,GAAD,OACG,kBAAC,EAAD,eACDC,IAAKD,EAAIV,IACLU,WESPE,EA1BO,WAAO,IAAD,EACS3C,mBAC7B,CAAC,WAFmB,mBACpB4C,EADoB,KACR7C,EADQ,KAMxB,OAEI,oCACA,4CADA,IACsB,6BAEtB,kBAAC,EAAD,CAAaA,cAAgBA,IACzB,4BAEQ6C,EAAWf,KAAK,SAACnB,GACd,OAAO,kBAAC,EAAD,CAASgC,IAAKhC,EAASA,SAAUA,UCb/DmC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8791cc9a.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories})=>{\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit =(e)=>{\r\n         e.preventDefault();\r\n         console.log(inputValue.trim())\r\n         if(inputValue.trim().length>2){\r\n            setCategories(category =>{ return [inputValue,...category]});\r\n            setInputValue('');\r\n         }\r\n        \r\n       \r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n        <input\r\n        type='text'\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        ></input>\r\n\r\n        </form>\r\n     \r\n    );\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n};","\r\n\r\nimport React from 'react';\r\n const GifGridItem = ({title,url})=>{\r\n\r\n    return(\r\n        <div className='card animate__bounce'>\r\n            <img src={url} alt={title} ></img>\r\n            <p>{title}</p>\r\n        </div>\r\n        \r\n    );\r\n\r\n}\r\nexport default GifGridItem;","\r\n    export const getGifs = async (category)=>{\r\n        const url=`https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI (category)}&api_key=RJEPnelZuS0ilu5fX0KGFj7P4Cue3d5O`\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n         const gifs = data.map(\r\n             arrayImg =>{\r\n               return {\r\n                id:arrayImg.id,\r\n                title:arrayImg.title,\r\n                url:arrayImg.images?.downsized.url \r\n              }\r\n         }\r\n       );\r\n\r\n    return gifs;\r\n    }","import React, { } from 'react'\r\n\r\nimport GifGridItem from './GifGridIitem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs'\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   const {data:images, loading}=useFetchGifs(category);\r\n   \r\n return (\r\n      <>\r\n      <h3 className='animate__flash'>{category}</h3>\r\n      <p>{loading && 'Cargando'}</p>\r\n      <div className='card-grid'>\r\n        \r\n          <ol> \r\n            {\r\n              images.map(\r\n                (img) =>(\r\n                   <GifGridItem\r\n                  key={img.id}\r\n                  {...img}\r\n                  />)\r\n              )\r\n            }\r\n          </ol>\r\n        </div>\r\n      </>\r\n    \r\n     )\r\n}\r\n","import {useEffect, useState} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs =(category)=>{\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(()=>{\r\n\r\n         getGifs(category).then(\r\n            gifs=>{ setstate({data:gifs,loading:false})}\r\n        ) } \r\n    ,[category]);\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport {AddCategory} from './Components/AddCategory';\r\nimport { GifGrid } from './Components/GifGrid';\r\n\r\nconst  GifExpertApp = () => {\r\n const [categories, setCategories] = useState(\r\n        ['Naruto']\r\n    );\r\n\r\n  \r\n    return(\r\n\r\n        <>\r\n        <h2>GifExpertApp</h2> <hr/>\r\n        \r\n        <AddCategory setCategories={ setCategories } />\r\n            <ol>\r\n                {\r\n                    categories.map( (category)=>{\r\n                       return <GifGrid key={category}category={category}/>\r\n                    } )\r\n                }\r\n            </ol>\r\n\r\n\r\n        </>\r\n    );\r\n     \r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp.js';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}